{
  "contractName": "HealthCare",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "HealthNoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QuestionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "doctorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "doctors",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVerified",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "healthNotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "file",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "patientCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "patients",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVerified",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "problem",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symptoms",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "previous",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "verifyDoctor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createDoctor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_patientAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createPatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_file",
          "type": "string"
        }
      ],
      "name": "writeNote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_age",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_symptoms",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_problems",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_previous",
          "type": "string"
        }
      ],
      "name": "writeQuestion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"HealthNoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QuestionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createDoctor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createPatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"doctorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"doctors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"healthNotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"file\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"patientCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"patients\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"problem\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symptoms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"previous\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"verifyDoctor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_file\",\"type\":\"string\"}],\"name\":\"writeNote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_symptoms\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_problems\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_previous\",\"type\":\"string\"}],\"name\":\"writeQuestion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/eshaa/Desktop/HackIIITV/hackiiitv20-submissions/team1-3/src/contracts/HealthCare.sol\":\"HealthCare\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/eshaa/Desktop/HackIIITV/hackiiitv20-submissions/team1-3/src/contracts/HealthCare.sol\":{\"keccak256\":\"0xd637d7dfe00955e8dc995e7e156ca711f4db98782e45574d1371f5a902ab2c69\",\"urls\":[\"bzz-raw://ba04643327a1242f32c5210b33842a0c017b885433ec6b4ee5a8d667300e4452\",\"dweb:/ipfs/QmXgk98EzQ7EYbUmfmm5eV2oz7pFA4iJ1uSCeEdKtdFXbu\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060015560006003556000600555600060075534801561002457600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611951806100746000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638438ba851161008c578063a9583c2211610066578063a9583c2214610a5f578063d80cb05c14610b27578063f3c7807014610b6b578063f851a44014610c46576100ea565b80638438ba8514610645578063a0303c411461084e578063a0cdb54f1461086c576100ea565b806331b1b978116100c857806331b1b978146101f357806378522bc41461038057806379e2eaa91461039e5780638352a5861461058a576100ea565b80630869cfbc146100ef5780630b354b09146101b75780631525e5ea146101d5575b600080fd5b6101316004803603602081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c90565b604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561017b578082015181840152602081019050610160565b50505050905090810190601f1680156101a85780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101bf610d59565b6040518082815260200191505060405180910390f35b6101dd610d5f565b6040518082815260200191505060405180910390f35b61021f6004803603602081101561020957600080fd5b8101908080359060200190929190505050610d65565b60405180868152602001806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156102d95780820151818401526020810190506102be565b50505050905090810190601f1680156103065780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561033f578082015181840152602081019050610324565b50505050905090810190601f16801561036c5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b610388610f63565b6040518082815260200191505060405180910390f35b6103ca600480360360208110156103b457600080fd5b8101908080359060200190929190505050610f69565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561047c578082015181840152602081019050610461565b50505050905090810190601f1680156104a95780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156104e25780820151818401526020810190506104c7565b50505050905090810190601f16801561050f5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101561054857808201518184015260208101905061052d565b50505050905090810190601f1680156105755780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b610643600480360360208110156105a057600080fd5b81019080803590602001906401000000008111156105bd57600080fd5b8201836020820111156105cf57600080fd5b803590602001918460018302840111640100000000831117156105f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111ad565b005b61084c6004803603608081101561065b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561069857600080fd5b8201836020820111156106aa57600080fd5b803590602001918460018302840111640100000000831117156106cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561072f57600080fd5b82018360208201111561074157600080fd5b8035906020019184600183028401116401000000008311171561076357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107c657600080fd5b8201836020820111156107d857600080fd5b803590602001918460018302840111640100000000831117156107fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112a7565b005b610856611477565b6040518082815260200191505060405180910390f35b610a5d6004803603608081101561088257600080fd5b8101908080359060200190929190803590602001906401000000008111156108a957600080fd5b8201836020820111156108bb57600080fd5b803590602001918460018302840111640100000000831117156108dd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561094057600080fd5b82018360208201111561095257600080fd5b8035906020019184600183028401116401000000008311171561097457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109d757600080fd5b8201836020820111156109e957600080fd5b80359060200191846001830284011164010000000083111715610a0b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061147d565b005b610aa160048036036020811015610a7557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061152f565b604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015610aeb578082015181840152602081019050610ad0565b50505050905090810190601f168015610b185780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610b6960048036036020811015610b3d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f8565b005b610c4460048036036040811015610b8157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610bbe57600080fd5b820183602082011115610bd057600080fd5b80359060200191846001830284011164010000000083111715610bf257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116b7565b005b610c4e61181a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6004602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b60055481565b60075481565b6008602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e175780601f10610dec57610100808354040283529160200191610e17565b820191906000526020600020905b815481529060010190602001808311610dfa57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eb55780601f10610e8a57610100808354040283529160200191610eb5565b820191906000526020600020905b815481529060010190602001808311610e9857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f535780601f10610f2857610100808354040283529160200191610f53565b820191906000526020600020905b815481529060010190602001808311610f3657829003601f168201915b5050505050908060040154905085565b60015481565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110675780601f1061103c57610100808354040283529160200191611067565b820191906000526020600020905b81548152906001019060200180831161104a57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111055780601f106110da57610100808354040283529160200191611105565b820191906000526020600020905b8154815290600101906020018083116110e857829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a35780601f10611178576101008083540402835291602001916111a3565b820191906000526020600020905b81548152906001019060200180831161118657829003601f168201915b5050505050905086565b60001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461120d57600080fd5b604051806040016040528082815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611280929190611877565b5060208201518160010160006101000a81548160ff02191690831515021790555090505050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461130757600080fd5b61130f61183f565b6040518060c0016040528060055481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152506006600060055481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019080519060200190611433929190611877565b506080820151816004019080519060200190611450929190611877565b5060a082015181600501908051906020019061146d929190611877565b5090505050505050565b60035481565b6040518060a001604052806007548152602001838152602001848152602001828152602001858152506008600060075481526020019081526020016000206000820151816000015560208201518160010190805190602001906114e1929190611877565b5060408201518160020190805190602001906114fe929190611877565b50606082015181600301908051906020019061151b929190611877565b506080820151816004015590505050505050565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115db5780601f106115b0576101008083540402835291602001916115db565b820191906000526020600020905b8154815290600101906020018083116115be57829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461165157600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506116b4611852565b50565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461171757600080fd5b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461177757600080fd5b604051806040016040528082815260200160011515815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906117ea929190611877565b5060208201518160010160006101000a81548160ff021916908315150217905550905050611816611864565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600560008282540192505081905550565b60018060008282540192505081905550565b6001600360008282540192505081905550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118b857805160ff19168380011785556118e6565b828001600101855582156118e6579182015b828111156118e55782518255916020019190600101906118ca565b5b5090506118f391906118f7565b5090565b61191991905b808211156119155760008160009055506001016118fd565b5090565b9056fea265627a7a72315820d0ab33b326de8c7b1f48502ed52ede25b0936446657518e21fbe4316af06f06c64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638438ba851161008c578063a9583c2211610066578063a9583c2214610a5f578063d80cb05c14610b27578063f3c7807014610b6b578063f851a44014610c46576100ea565b80638438ba8514610645578063a0303c411461084e578063a0cdb54f1461086c576100ea565b806331b1b978116100c857806331b1b978146101f357806378522bc41461038057806379e2eaa91461039e5780638352a5861461058a576100ea565b80630869cfbc146100ef5780630b354b09146101b75780631525e5ea146101d5575b600080fd5b6101316004803603602081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c90565b604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561017b578082015181840152602081019050610160565b50505050905090810190601f1680156101a85780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101bf610d59565b6040518082815260200191505060405180910390f35b6101dd610d5f565b6040518082815260200191505060405180910390f35b61021f6004803603602081101561020957600080fd5b8101908080359060200190929190505050610d65565b60405180868152602001806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156102d95780820151818401526020810190506102be565b50505050905090810190601f1680156103065780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561033f578082015181840152602081019050610324565b50505050905090810190601f16801561036c5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b610388610f63565b6040518082815260200191505060405180910390f35b6103ca600480360360208110156103b457600080fd5b8101908080359060200190929190505050610f69565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561047c578082015181840152602081019050610461565b50505050905090810190601f1680156104a95780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156104e25780820151818401526020810190506104c7565b50505050905090810190601f16801561050f5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101561054857808201518184015260208101905061052d565b50505050905090810190601f1680156105755780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b610643600480360360208110156105a057600080fd5b81019080803590602001906401000000008111156105bd57600080fd5b8201836020820111156105cf57600080fd5b803590602001918460018302840111640100000000831117156105f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111ad565b005b61084c6004803603608081101561065b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561069857600080fd5b8201836020820111156106aa57600080fd5b803590602001918460018302840111640100000000831117156106cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561072f57600080fd5b82018360208201111561074157600080fd5b8035906020019184600183028401116401000000008311171561076357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107c657600080fd5b8201836020820111156107d857600080fd5b803590602001918460018302840111640100000000831117156107fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112a7565b005b610856611477565b6040518082815260200191505060405180910390f35b610a5d6004803603608081101561088257600080fd5b8101908080359060200190929190803590602001906401000000008111156108a957600080fd5b8201836020820111156108bb57600080fd5b803590602001918460018302840111640100000000831117156108dd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561094057600080fd5b82018360208201111561095257600080fd5b8035906020019184600183028401116401000000008311171561097457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109d757600080fd5b8201836020820111156109e957600080fd5b80359060200191846001830284011164010000000083111715610a0b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061147d565b005b610aa160048036036020811015610a7557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061152f565b604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015610aeb578082015181840152602081019050610ad0565b50505050905090810190601f168015610b185780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610b6960048036036020811015610b3d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115f8565b005b610c4460048036036040811015610b8157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610bbe57600080fd5b820183602082011115610bd057600080fd5b80359060200191846001830284011164010000000083111715610bf257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116b7565b005b610c4e61181a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6004602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b60055481565b60075481565b6008602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e175780601f10610dec57610100808354040283529160200191610e17565b820191906000526020600020905b815481529060010190602001808311610dfa57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eb55780601f10610e8a57610100808354040283529160200191610eb5565b820191906000526020600020905b815481529060010190602001808311610e9857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f535780601f10610f2857610100808354040283529160200191610f53565b820191906000526020600020905b815481529060010190602001808311610f3657829003601f168201915b5050505050908060040154905085565b60015481565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110675780601f1061103c57610100808354040283529160200191611067565b820191906000526020600020905b81548152906001019060200180831161104a57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111055780601f106110da57610100808354040283529160200191611105565b820191906000526020600020905b8154815290600101906020018083116110e857829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a35780601f10611178576101008083540402835291602001916111a3565b820191906000526020600020905b81548152906001019060200180831161118657829003601f168201915b5050505050905086565b60001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461120d57600080fd5b604051806040016040528082815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611280929190611877565b5060208201518160010160006101000a81548160ff02191690831515021790555090505050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461130757600080fd5b61130f61183f565b6040518060c0016040528060055481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152506006600060055481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019080519060200190611433929190611877565b506080820151816004019080519060200190611450929190611877565b5060a082015181600501908051906020019061146d929190611877565b5090505050505050565b60035481565b6040518060a001604052806007548152602001838152602001848152602001828152602001858152506008600060075481526020019081526020016000206000820151816000015560208201518160010190805190602001906114e1929190611877565b5060408201518160020190805190602001906114fe929190611877565b50606082015181600301908051906020019061151b929190611877565b506080820151816004015590505050505050565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115db5780601f106115b0576101008083540402835291602001916115db565b820191906000526020600020905b8154815290600101906020018083116115be57829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461165157600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506116b4611852565b50565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461171757600080fd5b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151461177757600080fd5b604051806040016040528082815260200160011515815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906117ea929190611877565b5060208201518160010160006101000a81548160ff021916908315150217905550905050611816611864565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600560008282540192505081905550565b60018060008282540192505081905550565b6001600360008282540192505081905550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118b857805160ff19168380011785556118e6565b828001600101855582156118e6579182015b828111156118e55782518255916020019190600101906118ca565b5b5090506118f391906118f7565b5090565b61191991905b808211156119155760008160009055506001016118fd565b5090565b9056fea265627a7a72315820d0ab33b326de8c7b1f48502ed52ede25b0936446657518e21fbe4316af06f06c64736f6c63430005100032",
  "sourceMap": "14236:3027:0:-;;;14627:1;14598:30;;15052:1;15022:31;;15629:1;15596:34;;16490:1;16459:32;;14292:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;14292:58:0;14332:10;14324:5;;:18;;;;;;;;;;;;;;;;;;14236:3027;;;;;;",
  "deployedSourceMap": "14236:3027:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14236:3027:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15060:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15060:43:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15060:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15596:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16459:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16498:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16498:50:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16498:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16498:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16498:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14598:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15637:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15637:49:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15637:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15637:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15637:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14839:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14839:175:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14839:175:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14839:175:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14839:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14839:175:0;;;;;;;;;;;;;;;:::i;:::-;;15968:485;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;15968:485:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15968:485:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15968:485:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15968:485:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15968:485:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15968:485:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15968:485:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15968:485:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15968:485:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15968:485:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15968:485:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15968:485:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15968:485:0;;;;;;;;;;;;;;;:::i;:::-;;15022:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16769:491;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;16769:491:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16769:491:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16769:491:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16769:491:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16769:491:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16769:491:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16769:491:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16769:491:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16769:491:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16769:491:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16769:491:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16769:491:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16769:491:0;;;;;;;;;;;;;;;:::i;:::-;;14635:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14635:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14635:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14451:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14451:139:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;15273:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15273:315:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15273:315:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15273:315:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15273:315:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15273:315:0;;;;;;;;;;;;;;;:::i;:::-;;14263:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15060:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15596:34::-;;;;:::o;16459:32::-;;;;:::o;16498:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14598:30::-;;;;:::o;15637:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14839:175::-;14942:5;14908:39;;:7;:19;14916:10;14908:19;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;14900:48;;;;;;14986:20;;;;;;;;14993:5;14986:20;;;;15000:5;14986:20;;;;;14964:7;:19;14972:10;14964:19;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14839:175;:::o;15968:485::-;16191:4;16157:38;;:7;:19;16165:10;16157:19;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:38;;;16149:47;;;;;;16217:19;:17;:19::i;:::-;16278:167;;;;;;;;16303:15;;16278:167;;;;16333:8;16278:167;;;;;;16356:10;16278:167;;;;;;16381:6;16278:167;;;;16402:12;16278:167;;;;16429:5;16278:167;;;16247:11;:28;16259:15;;16247:28;;;;;;;;;;;:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;15968:485;;;;:::o;15022:31::-;;;;:::o;16769:491::-;17080:172;;;;;;;;17108:13;;17080:172;;;;17162:9;17080:172;;;;17187:9;17080:172;;;;17212:9;17080:172;;;;17237:4;17080:172;;;17053:9;:24;17063:13;;17053:24;;;;;;;;;;;:199;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16769:491;;;;:::o;14635:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14451:139::-;14417:5;;;;;;;;;;;14403:19;;:10;:19;;;14395:28;;;;;;14551:4;14520:7;:17;14528:8;14520:17;;;;;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;14566:16;:14;:16::i;:::-;14451:139;:::o;15273:315::-;15413:4;15379:38;;:7;:19;15387:10;15379:19;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:38;;;15371:47;;;;;;15477:5;15437:45;;:8;:25;15446:15;15437:25;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:45;;;15429:54;;;;;;15532:20;;;;;;;;15540:5;15532:20;;;;15547:4;15532:20;;;;;15504:8;:25;15513:15;15504:25;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15563:17;:15;:17::i;:::-;15273:315;;:::o;14263:20::-;;;;;;;;;;;;;:::o;15873:77::-;15941:1;15922:15;;:20;;;;;;;;;;;15873:77::o;14761:70::-;14822:1;14807:11;;:16;;;;;;;;;;;14761:70::o;15193:72::-;15256:1;15240:12;;:17;;;;;;;;;;;15193:72::o;14236:3027::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// // // pragma solidity ^0.5.0;\r\n\r\n\r\n// // // contract HealthCare {\r\n// // //     address public admin;\r\n\r\n// // //     constructor() public {\r\n// // //         admin = msg.sender;\r\n// // //     }\r\n\r\n\r\n// // //     modifier adminCheck() {\r\n\r\n// // //         require(msg.sender == admin);\r\n// // //         _;\r\n// // //     }\r\n\r\n// // //     function verifyDoctor(address _address) public adminCheck {\r\n// // //         doctors[_address].isVerified = true;\r\n// // //         doctorsCounter();\r\n// // //     }\r\n\r\n// // //     uint256 public doctorCount = 0;\r\n// // //     mapping(address => Doctor) public doctors;\r\n// // //     struct Doctor {\r\n// // //         string name;\r\n// // //         bool isVerified;\r\n// // //     }\r\n\r\n// // //     function doctorsCounter() internal {\r\n// // //         doctorCount += 1;\r\n// // //     }\r\n\r\n// // //     function createDoctor(string memory _name) public {\r\n// // //         require(doctors[msg.sender].isVerified == false);     \r\n// // //         doctors[msg.sender] = Doctor(_name, false);\r\n// // //     }\r\n\r\n// // //     uint256 public patientCount = 0;\r\n// // //     mapping(address => Patient) public patients;\r\n// // //     struct Patient {\r\n// // //         string name;\r\n// // //         bool isVerified;\r\n// // //     }\r\n    \r\n// // //     function patientsCounter() internal {\r\n// // //         patientCount += 1;\r\n// // //     }\r\n\r\n// // //     function createPatient( address _patientAddress, string memory _name) public {\r\n        \r\n// // //         require(doctors[msg.sender].isVerified == true);\r\n// // //         require(patients[_patientAddress].isVerified == false);\r\n        \r\n// // //         patients[_patientAddress] = Patient(_name, true);\r\n// // //         patientsCounter();\r\n// // //     }\r\n\r\n// // //     uint256 public HealthNoteCount = 0;\r\n// // //     mapping(uint256 => HealthNote) public healthNotes;\r\n// // //     struct HealthNote {\r\n// // //         uint256 id;\r\n// // //         address patient;\r\n// // //         address doctor;\r\n// // //         string title;\r\n// // //         string description;\r\n// // //         string file;\r\n// // //     }\r\n\r\n// // //     function HealthNoteCounter() internal {\r\n// // //         HealthNoteCount += 1;\r\n// // //     }\r\n    \r\n    \r\n// // //     function writeNote(\r\n// // //         address _patient,\r\n// // //         string memory _title,\r\n// // //         string memory _description,\r\n// // //         string memory _file\r\n// // //     ) public {\r\n        \r\n\r\n// // //         require(doctors[msg.sender].isVerified == true);\r\n        \r\n// // //         HealthNoteCounter();\r\n// // //         healthNotes[HealthNoteCount] = HealthNote(\r\n// // //             HealthNoteCount,\r\n// // //             _patient,\r\n// // //             msg.sender,\r\n// // //             _title,\r\n// // //             _description,\r\n// // //             _file\r\n// // //         );\r\n// // //     }\r\n\r\n// // //     struct Questionnaire {\r\n// // //         uint256 id;\r\n// // //         address patient;\r\n// // //         address doctor;\r\n// // //         string problem;\r\n// // //         string symptoms;\r\n// // //         string previous;\r\n// // //         uint256 age;\r\n// // //     }\r\n\r\n// // //     function writeQuestion(\r\n// // //         address _patient,\r\n// // //         uint256 memory _age,\r\n// // //         string memory _symptoms,\r\n// // //         string memory _problems,\r\n// // //         string memory _previous,\r\n// // //     ) public {\r\n        \r\n// // //         require(doctors[msg.sender].isVerified == true);\r\n        \r\n// // //         HealthNote[HealthNoteCount] = HealthNote(\r\n// // //             HealthNoteCount,\r\n// // //             _patient,\r\n// // //             msg.sender,\r\n// // //             _title,\r\n// // //             _description,\r\n// // //             _file\r\n// // //         );\r\n// // //     }\r\n// // // }\r\n\r\n// // pragma solidity ^0.5.0;\r\n\r\n\r\n// // contract HealthCare {\r\n// //     address public admin;\r\n\r\n// //     constructor() public {\r\n// //         admin = msg.sender;\r\n// //     }\r\n\r\n\r\n// //     modifier adminCheck() {\r\n\r\n// //         require(msg.sender == admin);\r\n// //         _;\r\n// //     }\r\n\r\n// //     function verifyDoctor(address _address) public adminCheck {\r\n// //         doctors[_address].isVerified = true;\r\n// //         doctorsCounter();\r\n// //     }\r\n\r\n// //     uint256 public doctorCount = 0;\r\n// //     mapping(address => Doctor) public doctors;\r\n// //     struct Doctor {\r\n// //         string name;\r\n// //         bool isVerified;\r\n// //     }\r\n\r\n// //     function doctorsCounter() internal {\r\n// //         doctorCount += 1;\r\n// //     }\r\n\r\n// //     function createDoctor(string memory _name) public {\r\n// //         require(doctors[msg.sender].isVerified == false);     \r\n// //         doctors[msg.sender] = Doctor(_name, false);\r\n// //     }\r\n\r\n// //     uint256 public patientCount = 0;\r\n// //     mapping(address => Patient) public patients;\r\n// //     struct Patient {\r\n// //         string name;\r\n// //         bool isVerified;\r\n// //     }\r\n    \r\n// //     function patientsCounter() internal {\r\n// //         patientCount += 1;\r\n// //     }\r\n\r\n// //     function createPatient( address _patientAddress, string memory _name) public {\r\n        \r\n// //         require(doctors[msg.sender].isVerified == true);\r\n// //         require(patients[_patientAddress].isVerified == false);\r\n        \r\n// //         patients[_patientAddress] = Patient(_name, true);\r\n// //         patientsCounter();\r\n// //     }\r\n\r\n// //     uint256 public HealthNoteCount = 0;\r\n// //     mapping(uint256 => HealthNote) public healthNotes;\r\n// //     struct HealthNote {\r\n// //         uint256 id;\r\n// //         address patient;\r\n// //         address doctor;\r\n// //         string title;\r\n// //         string description;\r\n// //         string file;\r\n// //     }\r\n\r\n// //     function HealthNoteCounter() internal {\r\n// //         HealthNoteCount += 1;\r\n// //     }\r\n    \r\n    \r\n// //     function writeNote(\r\n// //         address _patient,\r\n// //         string memory _title,\r\n// //         string memory _description,\r\n// //         string memory _file\r\n// //     ) public {\r\n        \r\n\r\n// //         require(doctors[msg.sender].isVerified == true);\r\n        \r\n// //         HealthNoteCounter();\r\n// //         healthNotes[HealthNoteCount] = HealthNote(\r\n// //             HealthNoteCount,\r\n// //             _patient,\r\n// //             msg.sender,\r\n// //             _title,\r\n// //             _description,\r\n// //             _file\r\n// //         );\r\n// //     }\r\n// //     uint256 public QuestionCount = 0;\r\n// //     mapping(uint256 => Questionnaire) public questions;\r\n// //     struct Questionnaire {\r\n// //         uint256 id;\r\n// //         address patient;\r\n// //         // address doctor;\r\n// //         string problem;\r\n// //         string symptoms;\r\n// //         string previous;\r\n// //         uint256 age;\r\n// //     }\r\n\r\n// //     function writeQuestion(\r\n// //         address _patient,\r\n// //         uint256 _age,\r\n// //         string memory _symptoms,\r\n// //         string memory _problems,\r\n// //         string memory _previous\r\n// //     ) public {\r\n        \r\n// //         // require(doctors[msg.sender].isVerified == true);\r\n        \r\n// //         questions[QuestionCount] = Questionnaire(\r\n// //             QuestionCount,\r\n// //             _patient,\r\n// //              _age,\r\n// //              _symptoms,\r\n// //              _problems,\r\n// //              _previous\r\n// //         );\r\n// //     }\r\n// // }\r\n\r\n\r\n// pragma solidity ^0.5.0;\r\n\r\n\r\n// contract HealthCare {\r\n//     address public admin;\r\n\r\n//     constructor() public {\r\n//         admin = msg.sender;\r\n//     }\r\n\r\n\r\n//     modifier adminCheck() {\r\n\r\n//         require(msg.sender == admin);\r\n//         _;\r\n//     }\r\n\r\n//     function verifyDoctor(address _address) public adminCheck {\r\n//         doctors[_address].isVerified = true;\r\n//         doctorsCounter();\r\n//     }\r\n\r\n//     uint256 public doctorCount = 0;\r\n//     mapping(address => Doctor) public doctors;\r\n//     struct Doctor {\r\n//         string name;\r\n//         bool isVerified;\r\n//     }\r\n\r\n//     function doctorsCounter() internal {\r\n//         doctorCount += 1;\r\n//     }\r\n\r\n//     function createDoctor(string memory _name) public {\r\n//         require(doctors[msg.sender].isVerified == false);     \r\n//         doctors[msg.sender] = Doctor(_name, false);\r\n//     }\r\n\r\n//     uint256 public patientCount = 0;\r\n//     mapping(address => Patient) public patients;\r\n//     struct Patient {\r\n//         string name;\r\n//         bool isVerified;\r\n//     }\r\n    \r\n//     function patientsCounter() internal {\r\n//         patientCount += 1;\r\n//     }\r\n\r\n//     function createPatient( address _patientAddress, string memory _name) public {\r\n        \r\n//         require(doctors[msg.sender].isVerified == true);\r\n//         require(patients[_patientAddress].isVerified == false);\r\n        \r\n//         patients[_patientAddress] = Patient(_name, true);\r\n//         patientsCounter();\r\n//     }\r\n\r\n//     uint256 public HealthNoteCount = 0;\r\n//     mapping(uint256 => HealthNote) public healthNotes;\r\n//     struct HealthNote {\r\n//         uint256 id;\r\n//         address patient;\r\n//         address doctor;\r\n//         string title;\r\n//         string description;\r\n//         string file;\r\n//     }\r\n\r\n//     function HealthNoteCounter() internal {\r\n//         HealthNoteCount += 1;\r\n//     }\r\n    \r\n    \r\n//     function writeNote(\r\n//         address _patient,\r\n//         string memory _title,\r\n//         string memory _description,\r\n//         string memory _file\r\n//     ) public {\r\n        \r\n\r\n//         require(doctors[msg.sender].isVerified == true);\r\n        \r\n//         HealthNoteCounter();\r\n//         healthNotes[HealthNoteCount] = HealthNote(\r\n//             HealthNoteCount,\r\n//             _patient,\r\n//             msg.sender,\r\n//             _title,\r\n//             _description,\r\n//             _file\r\n//         );\r\n//     }\r\n//     uint256 public QuestionCount = 0;\r\n//     mapping(uint256 => Questionnaire) public questions;\r\n//     struct Questionnaire {\r\n//         uint256 id;\r\n//         address patient;\r\n//         // address doctor;\r\n//         string problem;\r\n//         string symptoms;\r\n//         string previous;\r\n//         uint256 age;\r\n//     }\r\n\r\n//     function writeQuestion(\r\n//         address _patient,\r\n//         uint256 _age,\r\n//         string memory _symptoms,\r\n//         string memory _problems,\r\n//         string memory _previous\r\n//     ) public {\r\n        \r\n//         // require(doctors[msg.sender].isVerified == true);\r\n        \r\n//         questions[QuestionCount] = Questionnaire(\r\n//             QuestionCount,\r\n//             _patient,\r\n//             _problems,\r\n//              _symptoms,\r\n//              _previous,\r\n//              _age\r\n//         );\r\n// //     }\r\n// // }\r\n\r\n// pragma solidity ^0.5.0;\r\n\r\n\r\n// contract HealthCare {\r\n//     address public admin;\r\n\r\n//     constructor() public {\r\n//         admin = msg.sender;\r\n//     }\r\n\r\n\r\n//     modifier adminCheck() {\r\n\r\n//         require(msg.sender == admin);\r\n//         _;\r\n//     }\r\n\r\n//     function verifyDoctor(address _address) public adminCheck {\r\n//         doctors[_address].isVerified = true;\r\n//         doctorsCounter();\r\n//     }\r\n\r\n//     uint256 public doctorCount = 0;\r\n//     mapping(address => Doctor) public doctors;\r\n//     struct Doctor {\r\n//         string name;\r\n//         bool isVerified;\r\n//     }\r\n\r\n//     function doctorsCounter() internal {\r\n//         doctorCount += 1;\r\n//     }\r\n\r\n//     function createDoctor(string memory _name) public {\r\n//         require(doctors[msg.sender].isVerified == false);     \r\n//         doctors[msg.sender] = Doctor(_name, false);\r\n//     }\r\n\r\n//     uint256 public patientCount = 0;\r\n//     mapping(address => Patient) public patients;\r\n//     struct Patient {\r\n//         string name;\r\n//         bool isVerified;\r\n//     }\r\n    \r\n//     function patientsCounter() internal {\r\n//         patientCount += 1;\r\n//     }\r\n\r\n//     function createPatient( address _patientAddress, string memory _name) public {\r\n        \r\n//         require(doctors[msg.sender].isVerified == true);\r\n//         require(patients[_patientAddress].isVerified == false);\r\n        \r\n//         patients[_patientAddress] = Patient(_name, true);\r\n//         patientsCounter();\r\n//     }\r\n\r\n//     uint256 public HealthNoteCount = 0;\r\n//     mapping(uint256 => HealthNote) public healthNotes;\r\n//     struct HealthNote {\r\n//         uint256 id;\r\n//         address patient;\r\n//         address doctor;\r\n//         string title;\r\n//         string description;\r\n//         string file;\r\n//     }\r\n\r\n//     function HealthNoteCounter() internal {\r\n//         HealthNoteCount += 1;\r\n//     }\r\n    \r\n    \r\n//     function writeNote(\r\n//         address _patient,\r\n//         string memory _title,\r\n//         string memory _description,\r\n//         string memory _file\r\n//     ) public {\r\n        \r\n\r\n//         require(doctors[msg.sender].isVerified == true);\r\n        \r\n//         HealthNoteCounter();\r\n//         healthNotes[HealthNoteCount] = HealthNote(\r\n//             HealthNoteCount,\r\n//             _patient,\r\n//             msg.sender,\r\n//             _title,\r\n//             _description,\r\n//             _file\r\n//         );\r\n//     }\r\n//     uint256 public QuestionCount = 0;\r\n//     mapping(uint256 => Questionnaire) public questions;\r\n//     struct Questionnaire {\r\n//         uint256 id;\r\n//         address patient;\r\n//         address doctor;\r\n//         string problem;\r\n//         string symptoms;\r\n//         string previous;\r\n//         uint256 age;\r\n//     }\r\n\r\n//     function writeQuestion(\r\n//         address _patient,\r\n//         uint256 memory _age,\r\n//         string memory _symptoms,\r\n//         string memory _problems\r\n//     ) public {\r\n        \r\n//         // require(doctors[msg.sender].isVerified == true);\r\n        \r\n//         questions[QuestionCount] = Questionnaire(\r\n//             QuestionCount,\r\n//             _patient,\r\n//              _symptoms,\r\n//              _problems,\r\n//              _previous,\r\n//              _age\r\n//         );\r\n//     }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\ncontract HealthCare {\r\n    address public admin;\r\n\r\n    constructor() public {\r\n        admin = msg.sender;\r\n    }\r\n\r\n\r\n    modifier adminCheck() {\r\n\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    function verifyDoctor(address _address) public adminCheck {\r\n        doctors[_address].isVerified = true;\r\n        doctorsCounter();\r\n    }\r\n\r\n    uint256 public doctorCount = 0;\r\n    mapping(address => Doctor) public doctors;\r\n    struct Doctor {\r\n        string name;\r\n        bool isVerified;\r\n    }\r\n\r\n    function doctorsCounter() internal {\r\n        doctorCount += 1;\r\n    }\r\n\r\n    function createDoctor(string memory _name) public {\r\n        require(doctors[msg.sender].isVerified == false);     \r\n        doctors[msg.sender] = Doctor(_name, false);\r\n    }\r\n\r\n    uint256 public patientCount = 0;\r\n    mapping(address => Patient) public patients;\r\n    struct Patient {\r\n        string name;\r\n        bool isVerified;\r\n    }\r\n    \r\n    function patientsCounter() internal {\r\n        patientCount += 1;\r\n    }\r\n\r\n    function createPatient( address _patientAddress, string memory _name) public {\r\n        \r\n        require(doctors[msg.sender].isVerified == true);\r\n        require(patients[_patientAddress].isVerified == false);\r\n        \r\n        patients[_patientAddress] = Patient(_name, true);\r\n        patientsCounter();\r\n    }\r\n\r\n    uint256 public HealthNoteCount = 0;\r\n    mapping(uint256 => HealthNote) public healthNotes;\r\n    struct HealthNote {\r\n        uint256 id;\r\n        address patient;\r\n        address doctor;\r\n        string title;\r\n        string description;\r\n        string file;\r\n    }\r\n\r\n    function HealthNoteCounter() internal {\r\n        HealthNoteCount += 1;\r\n    }\r\n    \r\n    \r\n    function writeNote(\r\n        address _patient,\r\n        string memory _title,\r\n        string memory _description,\r\n        string memory _file\r\n    ) public {\r\n        \r\n\r\n        require(doctors[msg.sender].isVerified == true);\r\n        \r\n        HealthNoteCounter();\r\n        healthNotes[HealthNoteCount] = HealthNote(\r\n            HealthNoteCount,\r\n            _patient,\r\n            msg.sender,\r\n            _title,\r\n            _description,\r\n            _file\r\n        );\r\n    }\r\n    uint256 public QuestionCount = 0;\r\n    mapping(uint256 => Questionnaire) public questions;\r\n    struct Questionnaire {\r\n        uint256 id;\r\n        // address patient;\r\n        // address doctor;\r\n        string problem;\r\n        string symptoms;\r\n        string previous;\r\n        uint256 age;\r\n    }\r\n\r\n    function writeQuestion(\r\n        // address _patient,\r\n        uint256 _age,\r\n        string memory _symptoms,\r\n        string memory _problems,\r\n        string memory _previous\r\n    ) public {\r\n        \r\n        // require(doctors[msg.sender].isVerified == true);\r\n        \r\n        questions[QuestionCount] = Questionnaire(\r\n            QuestionCount,\r\n            // _patient,\r\n            _problems,\r\n             _symptoms,\r\n             _previous,\r\n             _age\r\n        );\r\n    }\r\n}",
  "sourcePath": "C:/Users/eshaa/Desktop/HackIIITV/hackiiitv20-submissions/team1-3/src/contracts/HealthCare.sol",
  "ast": {
    "absolutePath": "/C/Users/eshaa/Desktop/HackIIITV/hackiiitv20-submissions/team1-3/src/contracts/HealthCare.sol",
    "exportedSymbols": {
      "HealthCare": [
        256
      ]
    },
    "id": 257,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "14207:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 256,
        "linearizedBaseContracts": [
          256
        ],
        "name": "HealthCare",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "14263:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "14263:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "14313:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "14324:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "14332:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14332:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "14324:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "14324:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14303:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14313:0:0"
            },
            "scope": 256,
            "src": "14292:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "14382:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "14403:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14403:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "14417:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14403:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "14395:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14395:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "14395:28:0"
                },
                {
                  "id": 21,
                  "nodeType": "PlaceholderStatement",
                  "src": "14434:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "name": "adminCheck",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14379:2:0"
            },
            "src": "14360:83:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "14509:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "14520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                            "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                          }
                        },
                        "id": 32,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "14528:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14520:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$53_storage",
                          "typeString": "struct HealthCare.Doctor storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isVerified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "14520:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14551:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14520:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "14520:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37,
                      "name": "doctorsCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "14566:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14566:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "14566:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "adminCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23,
                  "src": "14498:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14498:10:0"
              }
            ],
            "name": "verifyDoctor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "14473:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14473:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14472:18:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14509:0:0"
            },
            "scope": 256,
            "src": "14451:139:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "doctorCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "14598:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14598:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "14627:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "doctors",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "14635:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
              "typeString": "mapping(address => struct HealthCare.Doctor)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "14643:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "14635:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                "typeString": "mapping(address => struct HealthCare.Doctor)"
              },
              "valueType": {
                "contractScope": null,
                "id": 46,
                "name": "Doctor",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 53,
                "src": "14654:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$53_storage_ptr",
                  "typeString": "struct HealthCare.Doctor"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.Doctor",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 50,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "14708:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "14708:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "name": "isVerified",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "14730:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 51,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "14730:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "14683:70:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "14796:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 56,
                      "name": "doctorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "14807:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14822:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14807:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "14807:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doctorsCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14784:2:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14796:0:0"
            },
            "scope": 256,
            "src": "14761:70:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "14889:125:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "14908:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                              }
                            },
                            "id": 70,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "14916:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14916:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14908:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$53_storage",
                              "typeString": "struct HealthCare.Doctor storage ref"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "14908:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14942:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "14908:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "14900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14900:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "14900:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "doctors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "14964:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                          "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "14972:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14972:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14964:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$53_storage",
                        "typeString": "struct HealthCare.Doctor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "14993:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15000:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 80,
                        "name": "Doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "14986:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Doctor_$53_storage_ptr_$",
                          "typeString": "type(struct HealthCare.Doctor storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14986:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$53_memory",
                        "typeString": "struct HealthCare.Doctor memory"
                      }
                    },
                    "src": "14964:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$53_storage",
                      "typeString": "struct HealthCare.Doctor storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "14964:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDoctor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "14861:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14861:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14860:21:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14889:0:0"
            },
            "scope": 256,
            "src": "14839:175:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 90,
            "name": "patientCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15022:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "15022:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 89,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "15052:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 94,
            "name": "patients",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15060:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
              "typeString": "mapping(address => struct HealthCare.Patient)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 91,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "15068:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "15060:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
                "typeString": "mapping(address => struct HealthCare.Patient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 92,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 99,
                "src": "15079:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$99_storage_ptr",
                  "typeString": "struct HealthCare.Patient"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.Patient",
            "id": 99,
            "members": [
              {
                "constant": false,
                "id": 96,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "15136:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 95,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15136:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "name": "isVerified",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "15158:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 97,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "15158:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "15110:71:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "15229:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "patientCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "15240:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15256:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15240:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "15240:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "patientsCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15217:2:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15229:0:0"
            },
            "scope": 256,
            "src": "15193:72:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "15350:238:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "15379:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                              }
                            },
                            "id": 118,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "15387:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15387:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15379:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$53_storage",
                              "typeString": "struct HealthCare.Doctor storage ref"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "15379:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15413:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "15379:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "15371:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15371:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "15371:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 125,
                              "name": "patients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "15437:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Patient storage ref)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 126,
                              "name": "_patientAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "15446:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15437:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$99_storage",
                              "typeString": "struct HealthCare.Patient storage ref"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "15437:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15477:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "15437:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "15429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15429:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "15429:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "15504:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
                          "typeString": "mapping(address => struct HealthCare.Patient storage ref)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_patientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "15513:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15504:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$99_storage",
                        "typeString": "struct HealthCare.Patient storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 137,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "15540:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15547:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 136,
                        "name": "Patient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "15532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Patient_$99_storage_ptr_$",
                          "typeString": "type(struct HealthCare.Patient storage pointer)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15532:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$99_memory",
                        "typeString": "struct HealthCare.Patient memory"
                      }
                    },
                    "src": "15504:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$99_storage",
                      "typeString": "struct HealthCare.Patient storage ref"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "15504:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 142,
                      "name": "patientsCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "15563:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15563:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "15563:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPatient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_patientAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "15297:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15297:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "15322:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15322:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15295:47:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15350:0:0"
            },
            "scope": 256,
            "src": "15273:315:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 149,
            "name": "HealthNoteCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15596:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "15596:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "15629:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 153,
            "name": "healthNotes",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15637:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthNote_$166_storage_$",
              "typeString": "mapping(uint256 => struct HealthCare.HealthNote)"
            },
            "typeName": {
              "id": 152,
              "keyType": {
                "id": 150,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "15645:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "15637:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthNote_$166_storage_$",
                "typeString": "mapping(uint256 => struct HealthCare.HealthNote)"
              },
              "valueType": {
                "contractScope": null,
                "id": 151,
                "name": "HealthNote",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 166,
                "src": "15656:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_HealthNote_$166_storage_ptr",
                  "typeString": "struct HealthCare.HealthNote"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.HealthNote",
            "id": 166,
            "members": [
              {
                "constant": false,
                "id": 155,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15722:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 154,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "15722:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 157,
                "name": "patient",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15743:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 156,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15743:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 159,
                "name": "doctor",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15769:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 158,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15769:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 161,
                "name": "title",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15794:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 160,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15794:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 163,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15817:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 162,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15817:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 165,
                "name": "file",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15846:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 164,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15846:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "HealthNote",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "15693:172:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "15911:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "HealthNoteCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "15922:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15941:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15922:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "15922:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "HealthNoteCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15899:2:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15911:0:0"
            },
            "scope": 256,
            "src": "15873:77:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "16126:327:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 186,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "16157:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                              }
                            },
                            "id": 189,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 187,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "16165:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "16165:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16157:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$53_storage",
                              "typeString": "struct HealthCare.Doctor storage ref"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "16157:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16191:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "16157:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "16149:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16149:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "16149:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 195,
                      "name": "HealthNoteCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "16217:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16217:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "16217:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "healthNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "16247:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthNote_$166_storage_$",
                          "typeString": "mapping(uint256 => struct HealthCare.HealthNote storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "HealthNoteCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "16259:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16247:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HealthNote_$166_storage",
                        "typeString": "struct HealthCare.HealthNote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "HealthNoteCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "16303:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "_patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "16333:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "16356:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "16356:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "_title",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "16381:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 207,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "16402:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "_file",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "16429:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 201,
                        "name": "HealthNote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "16278:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_HealthNote_$166_storage_ptr_$",
                          "typeString": "type(struct HealthCare.HealthNote storage pointer)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16278:167:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HealthNote_$166_memory",
                        "typeString": "struct HealthCare.HealthNote memory"
                      }
                    },
                    "src": "16247:198:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HealthNote_$166_storage",
                      "typeString": "struct HealthCare.HealthNote storage ref"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "16247:198:0"
                }
              ]
            },
            "documentation": null,
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "15997:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15997:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "16024:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16024:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "16055:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16055:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "name": "_file",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "16092:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15986:132:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16126:0:0"
            },
            "scope": 256,
            "src": "15968:485:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 215,
        "src": "29:2220:0"
      }
    ],
    "src": "0:2249:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/user/Desktop/hackiiitv20-submissions/team1-3/src/contracts/HealthCare.sol",
    "exportedSymbols": {
      "HealthCare": [
        214
      ]
    },
    "id": 215,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 214,
        "linearizedBaseContracts": [
          214
        ],
        "name": "HealthCare",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 216,
            "name": "QuestionCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "16459:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "16459:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "16490:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 220,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "16498:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questionnaire_$231_storage_$",
              "typeString": "mapping(uint256 => struct HealthCare.Questionnaire)"
            },
            "typeName": {
              "id": 219,
              "keyType": {
                "id": 217,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16506:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16498:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questionnaire_$231_storage_$",
                "typeString": "mapping(uint256 => struct HealthCare.Questionnaire)"
              },
              "valueType": {
                "contractScope": null,
                "id": 218,
                "name": "Questionnaire",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 231,
                "src": "16517:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Questionnaire_$231_storage_ptr",
                  "typeString": "struct HealthCare.Questionnaire"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.Questionnaire",
            "id": 231,
            "members": [
              {
                "constant": false,
                "id": 222,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16587:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 221,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "16587:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 224,
                "name": "problem",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16665:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 223,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "16665:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 226,
                "name": "symptoms",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16690:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 225,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "16690:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 228,
                "name": "previous",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16716:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 227,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "16716:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 230,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16742:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 229,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "16742:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Questionnaire",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "16555:206:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "16961:299:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "17053:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questionnaire_$231_storage_$",
                          "typeString": "mapping(uint256 => struct HealthCare.Questionnaire storage ref)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "QuestionCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "17063:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17053:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questionnaire_$231_storage",
                        "typeString": "struct HealthCare.Questionnaire storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 246,
                          "name": "QuestionCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "17108:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 247,
                          "name": "_problems",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "17162:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "_symptoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "17187:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "_previous",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "17212:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 250,
                          "name": "_age",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "17237:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 245,
                        "name": "Questionnaire",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "17080:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Questionnaire_$231_storage_ptr_$",
                          "typeString": "type(struct HealthCare.Questionnaire storage pointer)"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17080:172:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questionnaire_$231_memory",
                        "typeString": "struct HealthCare.Questionnaire memory"
                      }
                    },
                    "src": "17053:199:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questionnaire_$231_storage",
                      "typeString": "struct HealthCare.Questionnaire storage ref"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "17053:199:0"
                }
              ]
            },
            "documentation": null,
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "_age",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16832:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "name": "_symptoms",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16855:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16855:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "name": "_problems",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16889:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16889:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "name": "_previous",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16923:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16923:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16791:162:0"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16961:0:0"
            },
            "scope": 256,
            "src": "16769:491:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 257,
        "src": "14236:3027:0"
      }
    ],
    "src": "14207:3056:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/eshaa/Desktop/HackIIITV/hackiiitv20-submissions/team1-3/src/contracts/HealthCare.sol",
    "exportedSymbols": {
      "HealthCare": [
        256
      ]
    },
    "id": 257,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "14207:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 256,
        "linearizedBaseContracts": [
          256
        ],
        "name": "HealthCare",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "14263:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "14263:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "14313:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "14324:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "14332:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14332:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "14324:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "14324:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14303:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14313:0:0"
            },
            "scope": 256,
            "src": "14292:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "14382:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "14403:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14403:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "14417:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14403:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "14395:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14395:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "14395:28:0"
                },
                {
                  "id": 21,
                  "nodeType": "PlaceholderStatement",
                  "src": "14434:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "name": "adminCheck",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14379:2:0"
            },
            "src": "14360:83:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "14509:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "doctors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "14520:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                            "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                          }
                        },
                        "id": 32,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "14528:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14520:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$53_storage",
                          "typeString": "struct HealthCare.Doctor storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isVerified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "14520:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14551:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14520:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "14520:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37,
                      "name": "doctorsCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "14566:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14566:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "14566:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "adminCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23,
                  "src": "14498:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14498:10:0"
              }
            ],
            "name": "verifyDoctor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "14473:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14473:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14472:18:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14509:0:0"
            },
            "scope": 256,
            "src": "14451:139:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "doctorCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "14598:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14598:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "14627:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "doctors",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "14635:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
              "typeString": "mapping(address => struct HealthCare.Doctor)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "14643:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "14635:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                "typeString": "mapping(address => struct HealthCare.Doctor)"
              },
              "valueType": {
                "contractScope": null,
                "id": 46,
                "name": "Doctor",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 53,
                "src": "14654:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$53_storage_ptr",
                  "typeString": "struct HealthCare.Doctor"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.Doctor",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 50,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "14708:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "14708:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "name": "isVerified",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "14730:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 51,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "14730:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "14683:70:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "14796:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 56,
                      "name": "doctorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "14807:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14822:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14807:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "14807:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doctorsCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14784:2:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14796:0:0"
            },
            "scope": 256,
            "src": "14761:70:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "14889:125:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "14908:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                              }
                            },
                            "id": 70,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "14916:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14916:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14908:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$53_storage",
                              "typeString": "struct HealthCare.Doctor storage ref"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "14908:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14942:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "14908:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "14900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14900:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "14900:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "doctors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "14964:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                          "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "14972:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14972:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14964:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$53_storage",
                        "typeString": "struct HealthCare.Doctor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "14993:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15000:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 80,
                        "name": "Doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "14986:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Doctor_$53_storage_ptr_$",
                          "typeString": "type(struct HealthCare.Doctor storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14986:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$53_memory",
                        "typeString": "struct HealthCare.Doctor memory"
                      }
                    },
                    "src": "14964:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$53_storage",
                      "typeString": "struct HealthCare.Doctor storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "14964:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDoctor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "14861:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14861:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14860:21:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14889:0:0"
            },
            "scope": 256,
            "src": "14839:175:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 90,
            "name": "patientCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15022:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "15022:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 89,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "15052:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 94,
            "name": "patients",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15060:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
              "typeString": "mapping(address => struct HealthCare.Patient)"
            },
            "typeName": {
              "id": 93,
              "keyType": {
                "id": 91,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "15068:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "15060:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
                "typeString": "mapping(address => struct HealthCare.Patient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 92,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 99,
                "src": "15079:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$99_storage_ptr",
                  "typeString": "struct HealthCare.Patient"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.Patient",
            "id": 99,
            "members": [
              {
                "constant": false,
                "id": 96,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "15136:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 95,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15136:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "name": "isVerified",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "15158:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 97,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "15158:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "15110:71:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "15229:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "patientCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "15240:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15256:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15240:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "15240:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "patientsCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15217:2:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15229:0:0"
            },
            "scope": 256,
            "src": "15193:72:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "15350:238:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "15379:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                              }
                            },
                            "id": 118,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "15387:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15387:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15379:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$53_storage",
                              "typeString": "struct HealthCare.Doctor storage ref"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "15379:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15413:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "15379:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "15371:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15371:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "15371:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 125,
                              "name": "patients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "15437:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Patient storage ref)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 126,
                              "name": "_patientAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "15446:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15437:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$99_storage",
                              "typeString": "struct HealthCare.Patient storage ref"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "15437:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15477:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "15437:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "15429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15429:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "15429:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "15504:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$99_storage_$",
                          "typeString": "mapping(address => struct HealthCare.Patient storage ref)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_patientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "15513:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15504:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$99_storage",
                        "typeString": "struct HealthCare.Patient storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 137,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "15540:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15547:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 136,
                        "name": "Patient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "15532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Patient_$99_storage_ptr_$",
                          "typeString": "type(struct HealthCare.Patient storage pointer)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15532:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$99_memory",
                        "typeString": "struct HealthCare.Patient memory"
                      }
                    },
                    "src": "15504:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$99_storage",
                      "typeString": "struct HealthCare.Patient storage ref"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "15504:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 142,
                      "name": "patientsCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "15563:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15563:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "15563:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPatient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_patientAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "15297:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15297:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "15322:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15322:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15295:47:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15350:0:0"
            },
            "scope": 256,
            "src": "15273:315:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 149,
            "name": "HealthNoteCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15596:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "15596:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "15629:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 153,
            "name": "healthNotes",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "15637:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthNote_$166_storage_$",
              "typeString": "mapping(uint256 => struct HealthCare.HealthNote)"
            },
            "typeName": {
              "id": 152,
              "keyType": {
                "id": 150,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "15645:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "15637:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthNote_$166_storage_$",
                "typeString": "mapping(uint256 => struct HealthCare.HealthNote)"
              },
              "valueType": {
                "contractScope": null,
                "id": 151,
                "name": "HealthNote",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 166,
                "src": "15656:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_HealthNote_$166_storage_ptr",
                  "typeString": "struct HealthCare.HealthNote"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.HealthNote",
            "id": 166,
            "members": [
              {
                "constant": false,
                "id": 155,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15722:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 154,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "15722:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 157,
                "name": "patient",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15743:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 156,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15743:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 159,
                "name": "doctor",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15769:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 158,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "15769:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 161,
                "name": "title",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15794:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 160,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15794:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 163,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15817:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 162,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15817:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 165,
                "name": "file",
                "nodeType": "VariableDeclaration",
                "scope": 166,
                "src": "15846:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 164,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "15846:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "HealthNote",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "15693:172:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "15911:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "HealthNoteCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "15922:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15941:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15922:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "15922:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "HealthNoteCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15899:2:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15911:0:0"
            },
            "scope": 256,
            "src": "15873:77:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "16126:327:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 186,
                              "name": "doctors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "16157:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$53_storage_$",
                                "typeString": "mapping(address => struct HealthCare.Doctor storage ref)"
                              }
                            },
                            "id": 189,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 187,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "16165:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "16165:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16157:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$53_storage",
                              "typeString": "struct HealthCare.Doctor storage ref"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "16157:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16191:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "16157:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        331,
                        332
                      ],
                      "referencedDeclaration": 331,
                      "src": "16149:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16149:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "16149:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 195,
                      "name": "HealthNoteCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "16217:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16217:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "16217:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "healthNotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "16247:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_HealthNote_$166_storage_$",
                          "typeString": "mapping(uint256 => struct HealthCare.HealthNote storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "HealthNoteCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "16259:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16247:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HealthNote_$166_storage",
                        "typeString": "struct HealthCare.HealthNote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "HealthNoteCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "16303:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "_patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "16333:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "16356:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "16356:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "_title",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "16381:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 207,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "16402:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "_file",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "16429:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 201,
                        "name": "HealthNote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "16278:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_HealthNote_$166_storage_ptr_$",
                          "typeString": "type(struct HealthCare.HealthNote storage pointer)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16278:167:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HealthNote_$166_memory",
                        "typeString": "struct HealthCare.HealthNote memory"
                      }
                    },
                    "src": "16247:198:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HealthNote_$166_storage",
                      "typeString": "struct HealthCare.HealthNote storage ref"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "16247:198:0"
                }
              ]
            },
            "documentation": null,
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "15997:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15997:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "name": "_title",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "16024:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16024:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "16055:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16055:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "name": "_file",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "16092:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15986:132:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16126:0:0"
            },
            "scope": 256,
            "src": "15968:485:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 216,
            "name": "QuestionCount",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "16459:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "16459:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "16490:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 220,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 256,
            "src": "16498:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questionnaire_$231_storage_$",
              "typeString": "mapping(uint256 => struct HealthCare.Questionnaire)"
            },
            "typeName": {
              "id": 219,
              "keyType": {
                "id": 217,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16506:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16498:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questionnaire_$231_storage_$",
                "typeString": "mapping(uint256 => struct HealthCare.Questionnaire)"
              },
              "valueType": {
                "contractScope": null,
                "id": 218,
                "name": "Questionnaire",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 231,
                "src": "16517:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Questionnaire_$231_storage_ptr",
                  "typeString": "struct HealthCare.Questionnaire"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "HealthCare.Questionnaire",
            "id": 231,
            "members": [
              {
                "constant": false,
                "id": 222,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16587:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 221,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "16587:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 224,
                "name": "problem",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16665:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 223,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "16665:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 226,
                "name": "symptoms",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16690:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 225,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "16690:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 228,
                "name": "previous",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16716:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 227,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "16716:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 230,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "16742:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 229,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "16742:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Questionnaire",
            "nodeType": "StructDefinition",
            "scope": 256,
            "src": "16555:206:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "16961:299:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "17053:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questionnaire_$231_storage_$",
                          "typeString": "mapping(uint256 => struct HealthCare.Questionnaire storage ref)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "QuestionCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "17063:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17053:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questionnaire_$231_storage",
                        "typeString": "struct HealthCare.Questionnaire storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 246,
                          "name": "QuestionCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "17108:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 247,
                          "name": "_problems",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "17162:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "_symptoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "17187:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "_previous",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "17212:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 250,
                          "name": "_age",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "17237:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 245,
                        "name": "Questionnaire",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "17080:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Questionnaire_$231_storage_ptr_$",
                          "typeString": "type(struct HealthCare.Questionnaire storage pointer)"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17080:172:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questionnaire_$231_memory",
                        "typeString": "struct HealthCare.Questionnaire memory"
                      }
                    },
                    "src": "17053:199:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questionnaire_$231_storage",
                      "typeString": "struct HealthCare.Questionnaire storage ref"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "17053:199:0"
                }
              ]
            },
            "documentation": null,
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "name": "_age",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16832:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "name": "_symptoms",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16855:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16855:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "name": "_problems",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16889:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16889:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "name": "_previous",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "16923:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16923:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16791:162:0"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16961:0:0"
            },
            "scope": 256,
            "src": "16769:491:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 257,
        "src": "14236:3027:0"
      }
    ],
    "src": "14207:3056:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4fe54b03713C81f4bf7Ba92F5E5f57d5F1566465",
      "transactionHash": "0x020b0f07a00a5a57c8e5086bfba0d1fcd14cc3a1c22098e1ecdd6c90cb0660f6"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-12T07:04:18.147Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}